package assertjprim;

/*
Утверждения с примитивными типами [#504883]
Рассмотрим общие формы написания утверждений
для подопытного класса. Сейчас перед нами не стоит задача
тестировать внутреннюю логику объекта, поэтому для тестов возьмем класс Model

Напишем тесты. Создадим тестовый класс.
Порядок написания утверждений в библиотеке AssertJ
простой и единообразный - в метод assertThat()
передаем результат выполнения этапа Act (переменная result)
и проверяем соответствие ожидаемому результату -
мы ожидаем true:
assertThat(result).isTrue();

____Среда разработки при вводе символа точки после
assertThat(result) подскажет возможные варианты
проверки в соответствии с типом результата

Возможна проверка сразу нескольких утверждений
для одного assertThat(result)При таком виде проверки
надо понимать, что тест будет пройден только если
все утверждения вернут true. Если какое-то утверждение
вернет false, то следующие за ним утверждения
проверяться не будут.

Проверка целочисленных типов интуитивно понятна:
Количественная проверка типов с плавающей точкой
на равенство производится с учетом точности оценки,
которая может быть выражена как в абсолютных величинах,
так и в процентах. Сначала указывается
опорная точка оценки (значение 5.25d), а далее
допустимая погрешность. Качественная оценка
результата эквивалентна понятиям "больше" "меньше"

Задание
Создайте класс Box с минимальной логикой,
который имеет 4 метода, возвращающие результаты типа
int, double, boolean, String.

Создайте тестовый класс BoxTest.
Добавьте минимум по два теста на каждый метод класса Box.

В каждом тесте используйте несколько утверждений,
доступных для конкретного типа оцениваемого результата.

 */