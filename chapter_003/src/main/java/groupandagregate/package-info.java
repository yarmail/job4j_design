package groupandagregate;

/**
 * Grouping and aggregate functions
 *
 * Группировка и агрегатные функции [#373618]
 *
 * Работать мы будем со студентами и предметами.
 * Связь между ними many-to-many стоит обратить внимание,
 * что в связывающей таблице также присутствует атрибут mark,
 * который отвечает за оценку ученика.
 *
 * -------------
 *
 * Агрегатные функции
 *
 * Как видно по структуре, могут возникнуть такие задачи:
 * Каков средний бал учеников? Каков максимальный/минимальный бал?
 *
 * Чтобы ответить на эти вопросы, существуют агрегатные функции.
 * Они выполняют ту же задачу, что и редукция в стримах,
 * т.е. сводят к чему-то ОДНОМУ. У нас есть набор данных,
 * а получаем мы ОДНО значение. К агрегатным функциям относят:
 * min(), max(), count(), avg(), sum(). Как и любые функции,
 * они принимают аргументы. Аргументом выступает столбец.
 *
 * Давайте ответим на выше поставленные вопросы. см sql
 *
 * ------------
 *
 * Группировка
 * Опять же говоря об оценках, могут возникнуть вопросы:
 * какова средняя оценка у каждого ученика?
 * какой в среднем балл набирают ученики по каждому предмету?
 *
 * Для этого существует понятие группировки.
 * Она предполагает разделение исходных данных (например результат join)
 * на группы по какому-то признаку, например по имени.
 * В результате этого процесса мы получаем (признак, (элемент1, …, элементN)).
 * Разумеется, такое представить в виде таблице не получиться,
 * поэтому для группы из элементов применяет агрегатную функцию,
 * тем самым мы получаем уже не группу, а какое-то значение.
 *
 * При использовании группировки, агрегатная функция автоматически
 * применяется к группе.
 */
