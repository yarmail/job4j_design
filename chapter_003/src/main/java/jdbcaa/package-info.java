package jdbcaa;

/**
 * 0. Видео [#6863]
 * Initial data on jdbc
 * Начальные данные о jdbc
 *
 * В этом уроке мы поговорим про JDBC. JDBC – это API,
 * т.е. набор вспомогательных классов, который позволяет работать
 * с базами данных. Причем JDBC предоставляет единый
 * интерфейс для работы с ними,
 * ведь бывают различные базы данных.
 *
 * Для работы с той или иной базой данных существует понятие
 * драйвера. Драйвер – это то, что позволяет работать с
 * бд (поддерживать подключения, выполнять запросы и т.д.).
 * Для каждой БД есть свой драйвер. Чтобы добавить драйвер
 * в проект необходимо добавить зависимость
 * на этот самый драйвер.
 *
 * В курсе мы используем PostgreSQL, поэтому нам необходимо
 * добавить драйвер именно для этой БД.
 * Зависимость можно получить по ссылке
 * https://mvnrepository.com/artifact/org.postgresql/postgresql
 *
 * Добавьте зависимость в проект:
 *
 * <dependency>
 *     <groupId>org.postgresql</groupId>
 *     <artifactId>postgresql</artifactId>
 *     <version>42.2.16</version>
 * </dependency>
 *
 * Подключение к БД
 * После добавления зависимости на драйвер, нам необходимо
 * его зарегистрировать в системе.
 *
 * Теперь можно подключаться к БД. Для подключения нам нужны url,
 * логин (имя пользователя) и пароль.
 * Чтобы получить подключения нужно воспользоваться
 * классом DriverManager, передав ему эти аргументы.
 *
 * Обратите внимание, что в url стоит префикс
 * “jdbc:postgres”. Это указывает, что мы подключаемся
 * к postgres через jdbc. Далее как обычно идет хост и порт,
 * а за ними уже имя базы данных.
 *
 * Хорошо, теперь мы получили объект типа Connection.
 * Если он не равен null, то это значит,
 * что установлено подключение и теперь мы можем
 * выполнять запросы к базе данных.
 *
 * Давайте получим имя пользователя и url,
 * а затем их выведем. Для получения информации о
 * БД и ее внутренней структуре существует класс
 * DatabaseMetaData.
 * Через него мы можем получить нужные данные.
 *
 */
