/*
one-to-one

Данная связь используется крайне редко,
по сравнению с первыми двумя.

Пример:
Очевидно, что паспорт и человек,
это связь один к одному. У каждого человека
есть только один паспорт. У паспорта может
быть только один владелец.

Организуется эта связь немного сложнее,
чем первые две. В первую очередь тут
стоит задать вопрос: какую связь мы хотим?
Однонаправленную (unidirectional)
или двунаправленную (bidirectional)?
Т.е. как мы хотим извлекать данные?
В контексте примера: мы хотим по паспорту получать
человека или наоборот? Или и так и так?
*/

-- Если нам нужно получать паспорт по человеку, то мы можем поступить так

--/*
create table passport(

                       id serial primary key,
                       seria int,
                       number int
);
--*/

--/*
create table people(
                     id serial primary key,
                     name varchar(255),
                     passport_id int references passport(id) unique
);
--*/

/*
Обратите внимание, что рядом с внешним ключом стоит unique.
Это значит, что данное значение уникально среди всех записей
данного столбца. Без этого ограничения(constraint) мы получим
связь many-to-one. Теперь по записе в таблице людей мы можем
перейти в таблицу паспорта для уточнения данных. Аналогично
мы могли бы поступить в случае, если бы нам нужно было получать
человека по паспорту. Такая организация связи является
однонаправленной. Обратите внимание, что на связи указано 1,
это значит, что связь один-к-одному, мы не можем писать unique,
т.к. это относится к спецификации БД.
*/

/*
Если нам нужно получать данные и так, и так (человека по паспорту
и паспорт по человеку), то мы можем сделать так:
*/

--/*
create table passport(
                       id serial primary key,
                       seria int,
                       number int
);
--*/

--/*
create table people(
                     id serial primary key,
                     name varchar(255)
);
--*/

--/*
create table passport_people(
                              id serial primary key,
                              passport_id int references passport(id) unique,
                              people_id int references people(id) unique
);
--*/

/*
Данный способ использует, как и many-to-many вспомогательную
таблицу, но опять же используется ограничения на внешние ключи
unique. Иначе мы получим связь many-to-many.
*/